# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: postgres-sa
#   namespace: grafana
#automountServiceAccountToken: false

# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: postgres-grafana-rolebinding
#   namespace: grafana
# subjects:
# - kind: ServiceAccount
#   name: postgres-sa
#   namespace: grafana
# roleRef:
#   kind: ClusterRole
#   name: system:openshift:scc:anyuid
#   apiGroup: rbac.authorization.k8s.io

# securityContext:
#   runAsUser: 1000700000
#   runAsGroup: 1000700000
#   runAsNonRoot: true
#   fsGroup: 1000700000
#   fsGroupChangePolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres  # Sets Deployment name
  namespace: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      namespace: grafana
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest # Sets Image
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432  # Exposes container port
          env:
          - name: POSTGRES_DB
            value: grafana
          - name: POSTGRES_USER
            value: postgres_user
          - name: POSTGRES_PASSWORD
            valueFrom: 
              secretKeyRef:
                name: postgres-db-creds
                key: password
          resources:
            limits:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-persistent-storage
      # serviceAccountName: "postgres-sa"
      volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim